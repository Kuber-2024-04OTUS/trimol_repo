apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: homework
spec:
  replicas: {{ .Values.container.replicaCount }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ .Values.nodeAffinity.key }}
                operator: In
                values:
                - "true"
      initContainers:
      - name: {{ .Release.Name }}-init
        image: {{ .Values.initcontainer.image }}
        volumeMounts:
        - name: work-dir
          mountPath: /init
        command: [/bin/sh, -c, echo "<html><head><title>homework</title></head><body><h1>Homework</h1></body></html>" > /init/index.html && curl -k https://kubernetes.default.svc/apis/metrics.k8s.io/v1beta1/nodes --header "Authorization":" Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)"  --insecure -o /init/metric.html]
      containers:
      - name: {{ .Release.Name }}
        image: {{ .Values.container.image }}
        ports:
          - containerPort: {{ .Values.container.containerPort }}
            name: nginx-port
        volumeMounts:
        - name: work-dir
          mountPath: /homework
        - name: config
          mountPath: /etc/nginx/conf.d/
        - name: cm
          mountPath: /homework/conf
        {{- if .Values.probes.enabled }}
        readinessProbe:
          httpGet:
            path: /index.html
            port: {{ .Values.container.containerPort }}
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
        {{- end }}
      serviceAccountName: monitoring-sa
      volumes:
        - name: work-dir
          emptyDir: {}
        - name: config
          configMap:
            name: cm-nginx
            items:
              - key: default.conf
                path: default.conf
        - name: cm
          configMap:
            name: cm
            items:
              - key: file
                path: file


